#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
"""
import asyncio
import httpx
import json


async def test_2fa():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é"""
    base_url = 'http://localhost:8000'
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ)
    test_email = 'test@example.com'
    test_password = 'TestPass123!'
    
    async with httpx.AsyncClient() as client:
        print('üîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏')
        print('=' * 50)
        
        # –®–∞–≥ 1: –ü–µ—Ä–≤—ã–π —ç—Ç–∞–ø –≤—Ö–æ–¥–∞ (–æ—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–¥–∞)
        print('\nüìß –®–∞–≥ 1: –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≤—Ö–æ–¥...')
        login_data = {
            'email': test_email,
            'password': test_password
        }
        
        try:
            response = await client.post(
                f'{base_url}/auth/2fa/login',
                json=login_data
            )
            
            print(f'–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}')
            print(f'–û—Ç–≤–µ—Ç: {response.json()}')
            
            if response.status_code == 200:
                print('‚úÖ –ö–æ–¥ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ email!')
                
                # –®–∞–≥ 2: –í—Ç–æ—Ä–æ–π —ç—Ç–∞–ø –≤—Ö–æ–¥–∞ (–ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞)
                print('\nüîë –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞...')
                print('–í–≤–µ–¥–∏—Ç–µ 6-–∑–Ω–∞—á–Ω—ã–π –∫–æ–¥ –∏–∑ email:')
                code = input('–ö–æ–¥: ')
                
                verify_data = {
                    'email': test_email,
                    'code': code
                }
                
                response = await client.post(
                    f'{base_url}/auth/2fa/verify',
                    json=verify_data
                )
                
                print(f'–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}')
                print(f'–û—Ç–≤–µ—Ç: {response.json()}')
                
                if response.status_code == 200:
                    print('‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥! –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω.')
                    token_data = response.json()
                    print(f'–¢–æ–∫–µ–Ω: {token_data.get("access_token", "–ù–µ –Ω–∞–π–¥–µ–Ω")[:50]}...')
                else:
                    print('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–æ–¥–∞')
            else:
                print('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–æ–¥–∞')
                
        except Exception as e:
            print(f'‚ùå –û—à–∏–±–∫–∞: {e}')


if __name__ == '__main__':
    asyncio.run(test_2fa())
